//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitGen.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Templates {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Templates() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UnitGen.Resources.Templates", typeof(Templates).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     public static $TypeName$ $UnitType$ = new (&quot;$UnitName$&quot;, &quot;$Symbol$&quot;);.
        /// </summary>
        internal static string BaseUnitEntry {
            get {
                return ResourceManager.GetString("BaseUnitEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     public static $TypeName$ $UnitType$ = new (&quot;$UnitName$&quot;, &quot;$Symbol$&quot;, $BaseUnit$, $Coefficient$, $Offset$);.
        /// </summary>
        internal static string DerivedUnitEntry {
            get {
                return ResourceManager.GetString("DerivedUnitEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///    #endregion
        ///}
        ///.
        /// </summary>
        internal static string UnitTypeEnd {
            get {
                return ResourceManager.GetString("UnitTypeEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public record $UnitType$(string Name, string Symbol, double Coefficient=1, double Offset=0) 
        ///    : IUnitOfMeasure&lt;$UnitType$&gt;
        ///{
        ///    public $UnitType$(string Name, string Symbol, $UnitType$ baseUnit, double Coefficient, double Offset = 0) 
        ///        : this(Name,Symbol,baseUnit.Coefficient*Coefficient,baseUnit.Coefficient*baseUnit.Offset+Offset)
        ///    {
        ///        Debug.WriteLine($&quot;{this}&quot;);
        ///    }
        ///    
        ///    #region Equality members
        ///
        ///    public virtual bool Equals($UnitType$? other)
        ///    {
        ///        return C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnitTypeStart {
            get {
                return ResourceManager.GetString("UnitTypeStart", resourceCulture);
            }
        }
    }
}
